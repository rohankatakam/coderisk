# ========================================
# CodeRisk Local Deployment Configuration
# Reference: dev_docs/03-implementation/integration_guides/local_deployment.md
# Security: NEVER commit .env to git (DEVELOPMENT_WORKFLOW.md §3.3)
# ========================================
# Usage:
#   1. Copy this file to .env: cp .env.example .env
#   2. Update passwords and API keys in .env
#   3. Verify .env is in .gitignore
# ========================================
MODE=local

# ========================================
# Neo4j Configuration (Graph Database)
# Reference: graph_ontology.md - Three-layer graph structure
# ========================================
NEO4J_HOST=localhost
NEO4J_AUTH=neo4j/CHANGE_THIS_PASSWORD_IN_PRODUCTION_123
NEO4J_USER=neo4j
NEO4J_PASSWORD=CHANGE_THIS_PASSWORD_IN_PRODUCTION_123
NEO4J_DATABASE=neo4j
NEO4J_MAX_HEAP=2G
NEO4J_PAGECACHE=1G

# Memory tuning by repo size (from system requirements table):
# Small (<500 files):  NEO4J_MAX_HEAP=2G, NEO4J_PAGECACHE=1G
# Medium (<5K files):  NEO4J_MAX_HEAP=4G, NEO4J_PAGECACHE=2G
# Large (<50K files):  NEO4J_MAX_HEAP=8G, NEO4J_PAGECACHE=4G

# ========================================
# PostgreSQL Configuration (Metadata)
# Reference: risk_assessment_methodology.md §5.1 - Validation schema
# ========================================
POSTGRES_DB=coderisk
POSTGRES_USER=coderisk
POSTGRES_PASSWORD=CHANGE_THIS_PASSWORD_IN_PRODUCTION_123

# ========================================
# Redis Configuration (Ephemeral Cache)
# Reference: agentic_design.md §4.1 - Cache strategy
# ========================================
REDIS_MAXMEMORY=2gb
REDIS_MAXMEMORY_POLICY=allkeys-lru

# ========================================
# API Service Configuration
# ========================================
API_PORT=8080
LOG_LEVEL=info

# ========================================
# Port Mappings (adjust if ports are in use)
# ========================================
NEO4J_HTTP_PORT=7475
NEO4J_BOLT_PORT=7688
POSTGRES_PORT_EXTERNAL=5433
REDIS_PORT_EXTERNAL=6380

# ========================================
# External API Keys (REQUIRED)
# Reference: dev_docs/DEVELOPMENT_WORKFLOW.md §3.3 - Security
# ========================================
# CRITICAL: Fill these in your .env file (NOT in .env.example)

# GitHub Personal Access Token (REQUIRED for fetching repository data)
# Create at: https://github.com/settings/tokens
# Required scopes: repo (for private repos) or public_repo (for public repos)
GITHUB_TOKEN=ghp_YOUR_GITHUB_TOKEN_HERE

# ========================================
# LLM Configuration (BYOK - Bring Your Own Key)
# Reference: spec.md §1.3 - BYOK model
# ========================================
# OPTIONAL: Phase 2 requires user's LLM API key
# Leave empty if you only want Phase 1 (baseline checks)

# Option 1: OpenAI (recommended for Phase 2)
# Create at: https://platform.openai.com/api-keys
# Model: gpt-4o-mini (default, cost-effective)
OPENAI_API_KEY=

# Option 2: Anthropic Claude (alternative)
# Create at: https://console.anthropic.com/settings/keys
# Model: claude-3-haiku (default)
ANTHROPIC_API_KEY=

# Enable Phase 2 LLM-powered investigations (requires API key above)
PHASE2_ENABLED=false

# ========================================
# Performance Tuning
# Reference: spec.md §2.4 - Performance targets
# ========================================
# Max graph traversal hops (spec.md §6.2 constraint C-6)
MAX_HOPS=5

# False positive rate threshold (spec.md §6.2 constraint C-10)
FP_THRESHOLD=0.03

# Investigation timeout (Phase 2)
INVESTIGATION_TIMEOUT_SECONDS=30

# ========================================
# Neo4j Performance Tuning
# Reference: NEO4J_PERFORMANCE_OPTIMIZATION_GUIDE.md Phase 4
# ========================================
# Connection pool configuration
NEO4J_MAX_POOL_SIZE=50              # Maximum concurrent connections (default: 100)
NEO4J_CONNECTION_TIMEOUT=60         # Connection acquisition timeout in seconds (default: 60)
NEO4J_MAX_LIFETIME=3600             # Maximum connection lifetime in seconds (default: 3600)

# Tuning guidance by workload:
# - Light workload (single user): NEO4J_MAX_POOL_SIZE=10
# - Medium workload (5-10 users): NEO4J_MAX_POOL_SIZE=50
# - Heavy workload (20+ users): NEO4J_MAX_POOL_SIZE=100
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# GoReleaser configuration for CodeRisk
# Triggered ONLY on git tag push (e.g., git push origin v0.2.0)
# Documentation: https://goreleaser.com

version: 2

before:
  hooks:
    - go mod tidy
    - go test ./...

builds:
  - id: crisk
    main: ./cmd/crisk
    binary: crisk
    env:
      - CGO_ENABLED=1
    
    goos:
      - linux
      - darwin
    
    goarch:
      - amd64
      - arm64
    
    # Skip Windows - CGO cross-compilation is complex
    ignore:
      - goos: windows
    
    flags:
      - -trimpath
    
    ldflags:
      - -s -w
      - -X main.Version={{.Version}}
      - -X main.GitCommit={{.ShortCommit}}
      - -X main.BuildTime={{.Date}}

archives:
  - id: crisk-archive
    format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- .Arch }}
    files:
      - LICENSE
      - README.md

checksum:
  name_template: 'checksums.txt'

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - 'typo'

# Docker images - PRODUCTION ONLY
# Pushed to Docker Hub on git tag
# For local dev, use: docker-compose.yml
dockers:
  - image_templates:
      - "rohankatakam/coderisk:{{ .Tag }}"
      - "rohankatakam/coderisk:v{{ .Major }}.{{ .Minor }}"
      - "rohankatakam/coderisk:latest"
    
    dockerfile: Dockerfile
    
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

# GitHub Release
release:
  github:
    owner: rohankatakam
    name: coderisk
  
  draft: false
  prerelease: auto
  
  name_template: "CodeRisk {{.Version}}"
  
  header: |
    ## CodeRisk {{.Version}}
    
    AI-powered code risk assessment for production deployments.
    
  footer: |
    ## Installation
    
    **Install Script:**
    ```bash
    curl -fsSL https://coderisk.dev/install.sh | bash
    ```
    
    **Docker:**
    ```bash
    docker pull rohankatakam/coderisk:{{.Version}}
    ```
    
    **Verify Installation:**
    ```bash
    crisk --version
    ```
    
    ---
    
    **Full Changelog**: https://github.com/rohankatakam/coderisk/compare/{{.PreviousTag}}...{{.Tag}}

# Homebrew - configure when ready
# brews:
#   - repository:
#       owner: rohankatakam
#       name: homebrew-coderisk
#     folder: Formula
#     homepage: https://coderisk.dev
#     description: AI-powered code risk assessment
#     license: MIT
#     test: |
#       system "#{bin}/crisk --version"
#     install: |
#       bin.install "crisk"
